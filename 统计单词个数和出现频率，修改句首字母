package com.company;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.IOException;
import java.nio.Buffer;
import java.util.*;
import java.io.*;

/*
编写程序，读入Trump.txt文件：
1)统计文件中的单词数和每个单词出现的频率，并将出现频率前十的单词及其频率在控制台输出。
2)将句子开头没有大写的字母修改过来，并记录修改次数，在控制台输出修改次数。
3)将修改过的文件拷贝到文件Trump revised.txt
 */


public class MyThread{
    public static void count_words(File f) throws IOException {
        BufferedReader re=new BufferedReader(new FileReader(f));
        File f2=new File("C:\\Users\\黄婕\\IdeaProjects\\test\\Trump revised.txt");
        BufferedWriter bw=new BufferedWriter(new FileWriter(f2));
        String str=null;
        String content=null;
        while((str=re.readLine())!=null){
                content=content+str+"\r";

        }
        content=content.substring(4);
        String[] cents=content.split("\\.");

        int chang_co=0;
        for(int i=0;i<cents.length;i++){

            int flag=0,flag1=0;
            char ch=cents[i].charAt(0);
            if(ch=='\"'&&cents[i].length()>1){
                cents[i]=cents[i].substring(1);
                flag++;
                ch=cents[i].charAt(0);
            }
            else
            if(ch==' '&&cents[i].length()>1){
                cents[i]=cents[i].substring(1);
                ch=cents[i].charAt(0);
            }
            if(flag!=0){
                cents[i-1]=cents[i-1]+"\"";
            }
            if(ch== '\r' &&cents[i].length()>1){

                cents[i-1]=cents[i-1]+".\r";
                cents[i]=cents[i].substring(2);
                ch=cents[i].charAt(0);

            }
            if(ch>='a'&&ch<='z'){
                char ch2=Character.toUpperCase(ch);
                cents[i].replace(ch,ch2);
                chang_co++;


            }


        }
        System.out.println("修改首字母次数："+chang_co);

        for(int j=0;j<cents.length;j++){
            bw.write(cents[j]);
            if(cents[j].endsWith("\r")){
                bw.newLine();
            }


        }

        bw.flush();
        bw.close();
        re.close();

    }
    public static void Frequency(File f) throws IOException{
        Map<String,Integer> map=new TreeMap<String,Integer>();

        BufferedReader re=new BufferedReader(new FileReader(f));
        String content=null;
        String str;
        while((str=re.readLine())!=null){
            content+=str;

        }

        content=content.substring(4);

        String[] words=content.split("[^a-zA-Z]");


        for(int i=0;i<words.length;i++){
            words[i]=words[i].toLowerCase();

        }

        for(int i=0;i<words.length;i++){
            if(map.containsKey(words[i])){
                int num=map.get(words[i]);
                num++;
                map.put(words[i],num);
            }
            else
                map.put(words[i],1);

        }

        List<Map.Entry<String,Integer>> list =new ArrayList<Map.Entry<String,Integer>>(map.entrySet());
        Collections.sort(list,new Comparator<Map.Entry<String,Integer>>(){
            public int compare(Map.Entry<String,Integer> o1, Map.Entry<String,Integer>o2){
                return o2.getValue().compareTo(o1.getValue());
            }
        });

        for(int i=1;i<11;i++) {
            Map.Entry<String, Integer> key=list.get(i);
            System.out.println(key);
        }

    }

    public static void main(String[] args) throws IOException{
        Scanner sc=new Scanner(System.in);
        File f=new File("C:\\Users\\黄婕\\IdeaProjects\\test\\Trump.txt");
        count_words(f);
        Frequency(f);
    }
}
